{
    "openapi": "3.0.1",
    "info": {
        "title": "API Specification",
        "description": "Merchant integration API specification. Detailed list of error codes can be downloaded from the \"Appendix\" section from above.",
        "version": "3.0.3"
    },
    "servers": [
        {
            "url": "/localhost/v1"
        }
    ],
    "paths": {
        "/eligible-banks/{companyId}/{brandId}": {
            "get": {
                "tags": [
                    "Eligible Banks"
                ],
                "summary": "Eligible Banks",
                "description": "Payit list of eligible banks",
                "operationId": "eligibleBanks",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "Unique identification assigned to the merchant company",
                        "required": true,
                        "schema": {
                            "pattern": "^\\S{1,36}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "description": "Unique identification assigned to the merchant brand",
                        "required": true,
                        "schema": {
                            "pattern": "^\\S{1,36}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Indicates the Payit version used. For Payit version 3 use 'application/app.v3+json' value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Payload from Payit Application for eligible banks",
                        "headers": {
                            "cache-control": {
                                "description": "contains the list of active banks and logo URLs",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "array",
                                    "description": "contains the list of active banks and logo URLs",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "PaymentTermsLink": {
                                                "type": "string",
                                                "example": "https://payitpreproduksppdnossb.blob.core.windows.net/documents/NatWest-Payit-User-Terms.pdf"
                                            },
                                            "eligibleBanks": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "BankID": {
                                                            "type": "string",
                                                            "example": "1234"
                                                        },
                                                        "BankName": {
                                                            "type": "string",
                                                            "example": "Royal Bank of Scotland"
                                                        },
                                                        "BankTemporarilyUnavailable": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "LogoUrl": {
                                                            "type": "string",
                                                            "example": "https://payitpreproduksppdnossb.blob.core.windows.net/banklogos/RBoS_V3.svg"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                }
            }
        },
        "/merchant-payments/embedded": {
            "post": {
                "tags": [
                    "Create"
                ],
                "summary": "Initiate Payment (Embedded)",
                "operationId": "createEmbeddedPayment",
                "parameters": [
                    {
                        "name": "x-transaction-ID",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-]{36}$"
                        }
                    },
                    {
                        "name": "x-FOV-indicator",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "false"
                        }
                    },
                    {
                        "name": "x-customer-device",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-customer-app",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-user-consent",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmbeddedMerchantPaymentPayloadV3"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Payit Application",
                        "headers": {
                            "x-transaction-ID": {
                                "description": "Payit Application will response with back with the Transaction id.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Data"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "required": [
                                                "CreationDateTime",
                                                "ResponseURL",
                                                "TPPReferenceID"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "ResponseURL": {
                                                    "maxLength": 2000,
                                                    "minLength": 1,
                                                    "type": "string",
                                                    "description": "This URL will be the Bank login URL. You should redirect to this url, which could open in a browser or in the mobile app of the bank",
                                                    "example": "https://uimockaspsp.npmob.bankdomain.com/?client_id=1wzxJ9flEzlNoJWAQ3Htns&response_type=code%20id_token&scope=openid%20payments&redirect_uri=https://uicore.sitnos.np0.payitnw.com/region0/oidc&state=VwBABgofv68OguB41pA2hGR_aK2buRwc&nonce=WHz-69WZn_bLHGdc4lnYqyKDz_H4vXXv&request=eyJraWQiOiJxNjZDRTBNLUpQbmxzMVNIR1ZXcGN4RXV4TUUiLCJhbGciOiJQUzI1NiJ9.eyJpc3MiOiIxd3p4SjlmbEV6bE5vSldBUTNIdG5zIiwicmVzcG9uc2VfdHlwZSI6ImNvZGUgaWRfdG9rZW4iLCJub25jZSI6IldIei02OVdabl9iTEhHZGM0bG5ZcXlLRHpfSDR2WFh2IiwiY2xpZW50X2lkIjoiMXd6eEo5ZmxFemxOb0pXQVEzSHRucyIsImF1ZCI6Ik1PQ0sgQVNQU1AgMDAwMiIsInNjb3BlIjoib3BlbmlkIHBheW1lbnRzIiwiY2xhaW1zIjp7ImlkX3Rva2VuIjp7ImFjciI6eyJ2YWx1ZSI6InVybjpvcGVuYmFua2luZzpwc2QyOnNjYSIsImVzc2VudGlhbCI6dHJ1ZX0sIm9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6Ijk2NTUzIiwiZXNzZW50aWFsIjp0cnVlfX0sInVzZXJpbmZvIjp7Im9wZW5iYW5raW5nX2ludGVudF9pZCI6eyJ2YWx1ZSI6Ijk2NTUzIiwiZXNzZW50aWFsIjp0cnVlfX19LCJyZWRpcmVjdF91cmkiOiJodHRwczpcL1wvdWljb3JlLnNpdG5vcy5ucDAucGF5aXRudy5jb21cL3JlZ2lvbjBcL29pZGMiLCJzdGF0ZSI6IlZ3QkFCZ29mdjY4T2d1QjQxcEEyaEdSX2FLMmJ1UndjIiwiZXhwIjoxNjY2MTkyNDU5LCJpYXQiOjE2NjYxODg4NTksImp0aSI6IjI1ZTVlNzY1LWYwZGEtNGZmNy05OTBlLWY3OTU4ZWI0MDlmNSJ9.n9JE53CHLDJiHFsThrSkLApwgXESAE2BBbRYmHZFfx26CzgA4XcPuoLz18OhH1D6MZAn0oclh0k9Q0VaX_3STLc5afAtVtSvr_MjQKLQ-JTgXc2wW2xoR2owFSBrydCj6-0v8p46Wc3WQWiCcxLzMYc533nQB1DXjqc2i26Pj60FVDVPnuWDnU2DZPQ5PHIWStfL_O6pkw6p8ipBiqljy3Qz13BMtjQd33b0cmUB_wXmoJstBLAh17HSl0jpw5pp7_xrqR-kN9yDFqgUjvsz41KAl0Pn7ezACmhRjdX_5iVKsvHk7vyqQe67e1qXaHAH6XsWUJWOzat5-8uRaUi9DQ"
                                                },
                                                "TPPReferenceID": {
                                                    "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                                    "type": "string",
                                                    "description": "The unique identifier generated by the TPP for the payment",
                                                    "example": "21314f7657a94cb2b5a3b754c9697ec9"
                                                },
                                                "CreationDateTime": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2020-04-05T10:43:07+00:00",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                }
            }
        },
        "/merchant-payments": {
            "post": {
                "tags": [
                    "Create"
                ],
                "summary": "Initiate Payment (Hosted)",
                "description": "Initiates a new single immediate payment flow",
                "operationId": "initiatePayment",
                "parameters": [
                    {
                        "name": "x-transaction-ID",
                        "in": "header",
                        "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Related to EndToEndIdentification field in open banking journey",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-]{36}$"
                        }
                    },
                    {
                        "name": "x-FOV-indicator",
                        "in": "header",
                        "description": "For production environments do not send this field or send it as false. Fov indicator will be used by to test new features in production , yet these features are not open to public - First occurrence Validation. ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-customer-device",
                        "in": "header",
                        "description": "Indicates the customers device or browser version",
                        "schema": {
                            "maxLength": 40,
                            "pattern": "^(?!\\s)(.*)(\\S)$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-customer-app",
                        "in": "header",
                        "description": "Indicates the customers browser name or app version",
                        "schema": {
                            "maxLength": 40,
                            "pattern": "^(?!\\s)(.*)(\\S)$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Indicates the Payit version used. For Payit version 3 use 'application/app.v3+json' value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Default",
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "required": [
                                    "Data"
                                ],
                                "type": "object",
                                "properties": {
                                    "Data": {
                                        "required": [
                                            "amount",
                                            "brandId",
                                            "companyId",
                                            "currency",
                                            "paymentContext",
                                            "redirectUrl"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "companyId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Parent Company id",
                                                "example": "BigCo-21343"
                                            },
                                            "brandId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Brand id",
                                                "example": "Brand-1"
                                            },
                                            "amount": {
                                                "type": "number",
                                                "description": "The sum to pay",
                                                "format": "string",
                                                "example": 20.45
                                            },
                                            "currency": {
                                                "type": "string",
                                                "description": "The currency in which the payment should be done, according to ISO 4217. For now only GBP is supported.",
                                                "example": "GBP"
                                            },
                                            "additionalMessaging": {
                                                "type": "string",
                                                "maxLength": 75,
                                                "description": "Reserved - use as advised by Payit"
                                            },
                                            "country": {
                                                "pattern": "^[A-Z]{2}$",
                                                "type": "string",
                                                "description": "The target country, used to filter ASPSPs, according to ISO 3166-1 alpha-2.For now only UK is supported.",
                                                "example": "UK"
                                            },
                                            "fpReference": {
                                                "pattern": "^[a-zA-Z0-9\\.\\-\\s]{1,18}$",
                                                "type": "string",
                                                "description": "The reference of the payment",
                                                "example": "Invoice1234"
                                            },
                                            "description": {
                                                "maxLength": 120,
                                                "pattern": "^[a-zA-Z0-9 ]*",
                                                "type": "string",
                                                "description": "Description for the payment, to be displayed to the user",
                                                "example": "Payment for order 4533640"
                                            },
                                            "redirectUrl": {
                                                "maxLength": 2000,
                                                "type": "string",
                                                "description": "\"The URL of the payment initiating party. This will be used to transfer the payment confirmation back to initiating party from Payit\"",
                                                "example": "https://payment.natwestpayit.com/status"
                                            },
                                            "paymentContext": {
                                                "required": [
                                                    "paymentContextCode"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "deliveryAddress": {
                                                        "type": "object",
                                                        "properties": {
                                                            "countryCode": {
                                                                "pattern": "^[A-Z]{2,2}$",
                                                                "type": "string",
                                                                "description": "For Ecommerce Goods payments, alongside the paymentContext code field, this is also mandatory.",
                                                                "example": "GB"
                                                            },
                                                            "townName": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "For Ecommerce Goods payments, alongside the paymentContext code field, this is also mandatory.",
                                                                "example": "London"
                                                            }
                                                        },
                                                        "description": "For Ecommerce Goods payments, alonside the paymentContext code field, this is also mandatory."
                                                    },
                                                    "merchantCategoryCode": {
                                                        "maxLength": 4,
                                                        "minLength": 3,
                                                        "type": "string",
                                                        "description": "For Ecommerce payments, alongside the paymentContext code field, this is also required. Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
                                                        "example": "1688"
                                                    },
                                                    "merchantCustomerIdentification": {
                                                        "maxLength": 70,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9]*",
                                                        "type": "string",
                                                        "description": "For Ecommerce payments, alongside the paymentContext code field, this is also mandatory. The unique customer identifier of the PSU with the merchant.",
                                                        "example": "merchCust1109946"
                                                    },
                                                    "paymentContextCode": {
                                                        "type": "string",
                                                        "description": "A new field for payment context code is required as this is now mandated by a number of Banks to support payment monitoring. Valid for all payment types.",
                                                        "example": "EcommerceGoods"
                                                    }
                                                }
                                            },
                                            "instructedAccounts": {
                                                "type": "object",
                                                "properties": {
                                                    "peer2Peerinfo": {
                                                        "required": [
                                                            "peer2PeerIdentification"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "peer2PeerIdentification": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "contains the sort-code and the account number of the customer to suffice peer to peer transfers",
                                                                "example": "77141261909834"
                                                            },
                                                            "peer2PeerBankName": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "contains the bank name of the customer to suffice peer to peer transfers. Brackets (eg. \"()\", \"[]\", \"{}\") are not allowed in this field.",
                                                                "example": "Lloyds UK PLC"
                                                            }
                                                        },
                                                        "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the destination account information. "
                                                    },
                                                    "preferredAcctInfo": {
                                                        "required": [
                                                            "paymentServiceUser",
                                                            "preferredAcctIdentification"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "preferredAcctIdentification": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "contains the sort-code only or the sort-code and the account number of the preferred account number for the customer",
                                                                "example": "66141261909899"
                                                            },
                                                            "preferredAcctBankName": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "Contains the preferred account bank name. ",
                                                                "example": "Santander UK PLC"
                                                            },
                                                            "paymentServiceUser": {
                                                                "maxLength": 50,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "Contains an identifier for the customer. This field will be used for \"remember me functionality\". This might contain the customer email address",
                                                                "example": "test@peer2peer.com"
                                                            }
                                                        },
                                                        "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the source account information."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Payit Application",
                        "headers": {
                            "x-transaction-ID": {
                                "description": "Payit Application will response with back with the Transaction id.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Data"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "required": [
                                                "CreationDateTime",
                                                "ResponseURL",
                                                "TPPReferenceID"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "ResponseURL": {
                                                    "maxLength": 2000,
                                                    "minLength": 1,
                                                    "type": "string",
                                                    "description": " ResponseUrl to redirect the end customer from your site to the Payit bank selection page",
                                                    "example": "https://payment.natwestpayit.com/select-bank?hash=CvsDPNyZ8T6CaO15cNmPdJsypZYCyf6VRzYogQA4kPw&TPPID=4a6695ff543e4374bf17d75c26d3820f&E2EID=12cf89ae86904c86b7b490f797216e3"
                                                },
                                                "TPPReferenceID": {
                                                    "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                                    "type": "string",
                                                    "description": "The unique identifier generated by the TPP for the payment",
                                                    "example": "21314f7657a94cb2b5a3b754c9697ec9"
                                                },
                                                "CreationDateTime": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format. All date-time fields in responses must include the timezone. An example is below: 2020-04-05T10:43:07+00:00",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "PaymentPayload-Param"
            }
        },
        "/merchant-scheduled-payments": {
            "post": {
                "tags": [
                    "Create"
                ],
                "summary": "Initiate Scheduled Payment (Hosted)",
                "description": "Initiates a new scheduled payment flow",
                "operationId": "initiateSchedulePayment",
                "parameters": [
                    {
                        "name": "x-transaction-ID",
                        "in": "header",
                        "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Related to EndToEndIdentification field in open banking journey",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-]{36}$"
                        }
                    },
                    {
                        "name": "x-FOV-indicator",
                        "in": "header",
                        "description": "For production environments do not send this field or send it as false. Fov indicator will be used by to test new features in production , yet these features are not open to public - First occurrence Validation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-customer-device",
                        "in": "header",
                        "description": "Indicates the customers device or browser version",
                        "schema": {
                            "maxLength": 40,
                            "pattern": "^(?!\\s)(.*)(\\S)$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-customer-app",
                        "in": "header",
                        "description": "Indicates the customers browser name or app version",
                        "schema": {
                            "maxLength": 40,
                            "pattern": "^(?!\\s)(.*)(\\S)$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Indicates the Payit version used. For Payit version 3 use 'application/app.v3+json' value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Default",
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "required": [
                                    "Data",
                                    "SchedulePaymentData"
                                ],
                                "type": "object",
                                "properties": {
                                    "Data": {
                                        "required": [
                                            "amount",
                                            "brandId",
                                            "companyId",
                                            "currency",
                                            "paymentContext",
                                            "redirectUrl"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "companyId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Parent Company id",
                                                "example": "BigCo-21343"
                                            },
                                            "brandId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Brand id",
                                                "example": "Brand-1"
                                            },
                                            "amount": {
                                                "type": "number",
                                                "description": "The sum to pay",
                                                "format": "string",
                                                "example": 20.45
                                            },
                                            "currency": {
                                                "type": "string",
                                                "description": "The currency in which the payment should be done, according to ISO 4217",
                                                "example": "GBP"
                                            },
                                            "additionalMessaging": {
                                                "type": "string",
                                                "maxLength": 75,
                                                "description": "Reserved - use as advised by Payit"
                                            },
                                            "country": {
                                                "pattern": "^[A-Z]{2}$",
                                                "type": "string",
                                                "description": "The target country, used to filter ASPSPs, according to ISO 3166-1 alpha-2.",
                                                "example": "UK"
                                            },
                                            "fpReference": {
                                                "pattern": "^[a-zA-Z0-9\\.\\-\\s]{1,18}$",
                                                "type": "string",
                                                "description": "The reference of the payment",
                                                "example": "Invoice1234"
                                            },
                                            "description": {
                                                "maxLength": 120,
                                                "pattern": "^[a-zA-Z0-9 ]*",
                                                "type": "string",
                                                "description": "Description for the payment, to be displayed to the user",
                                                "example": "Payment for order 453364"
                                            },
                                            "redirectUrl": {
                                                "maxLength": 2000,
                                                "type": "string",
                                                "description": "\"The URL of the payment initiating party. This will be used to transfer the payment confirmation back to initiating party from Payit\"",
                                                "example": "https://payment.natwestpayit.com/status"
                                            },
                                            "paymentContext": {
                                                "required": [
                                                    "paymentContextCode"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "deliveryAddress": {
                                                        "type": "object",
                                                        "properties": {
                                                            "countryCode": {
                                                                "pattern": "^[A-Z]{2,2}$",
                                                                "type": "string",
                                                                "description": "For Ecommerce Goods payments, alongside the paymentContext code field, this is also mandatory.",
                                                                "example": "GB"
                                                            },
                                                            "townName": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "For Ecommerce Goods payments, alongside the paymentContext code field, this is also mandatory.",
                                                                "example": "London"
                                                            }
                                                        },
                                                        "description": "For Ecommerce Goods payments, alonside the paymentContext code field, this is also mandatory."
                                                    },
                                                    "merchantCategoryCode": {
                                                        "maxLength": 4,
                                                        "minLength": 3,
                                                        "type": "string",
                                                        "description": "For Ecommerce payments, alongside the paymentContext code field, this is also required. Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction.",
                                                        "example": "1688"
                                                    },
                                                    "merchantCustomerIdentification": {
                                                        "maxLength": 70,
                                                        "minLength": 1,
                                                        "pattern": "^[a-zA-Z0-9]*",
                                                        "type": "string",
                                                        "description": "For Ecommerce payments, alongside the paymentContext code field, this is also mandatory. The unique customer identifier of the PSU with the merchant.",
                                                        "example": "merchCust1109946"
                                                    },
                                                    "paymentContextCode": {
                                                        "type": "string",
                                                        "description": "A new field for payment context code is required as this is now mandated by a number of Banks to support payment monitoring. Valid for all payment types.",
                                                        "example": "EcommerceGoods"
                                                    }
                                                }
                                            },
                                            "instructedAccounts": {
                                                "type": "object",
                                                "properties": {
                                                    "peer2Peerinfo": {
                                                        "required": [
                                                            "peer2PeerIdentification"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "peer2PeerIdentification": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "contains the sort-code and the account number of the customer to suffice peer to peer transfers",
                                                                "example": "77141261909834"
                                                            },
                                                            "peer2PeerBankName": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "contains the bank name of the customer to suffice peer to peer transfers. Brackets (eg. \"()\", \"[]\", \"{}\") are not allowed in this field.",
                                                                "example": "Lloyds UK PLC"
                                                            }
                                                        },
                                                        "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the destination account information. "
                                                    },
                                                    "preferredAcctInfo": {
                                                        "required": [
                                                            "paymentServiceUser",
                                                            "preferredAcctIdentification"
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "preferredAcctIdentification": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "contains the sort-code only or the sort-code and the account number of the preferred account number for the customer",
                                                                "example": "66141261909899"
                                                            },
                                                            "preferredAcctBankName": {
                                                                "maxLength": 35,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "Contains the preferred account bank name. ",
                                                                "example": "Santander UK PLC"
                                                            },
                                                            "paymentServiceUser": {
                                                                "maxLength": 50,
                                                                "minLength": 1,
                                                                "type": "string",
                                                                "description": "Contains an identifier for the customer. This field will be used for \"remember me functionality\". This might contain the customer email address",
                                                                "example": "test@peer2peer.com"
                                                            }
                                                        },
                                                        "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the source account information."
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "SchedulePaymentData": {
                                        "required": [
                                            "RequestedExecutionDateTime"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "RequestedExecutionDateTime": {
                                                "type": "string",
                                                "description": "Date at which the end user (customer) want to initiate the payment to the payment requesting party. This is the date on which the debtor's account is to be debited. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the time zone. An example is below: 2017-04-05T10:43:07+00:00",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Payit Application",
                        "headers": {
                            "x-transaction-ID": {
                                "description": "Payit Application will response with back with the Transaction id.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Data"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "required": [
                                                "CreationDateTime",
                                                "ResponseURL",
                                                "TPPReferenceID"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "ResponseURL": {
                                                    "maxLength": 2000,
                                                    "minLength": 1,
                                                    "type": "string",
                                                    "description": "This URL will be the Payit APP URL, initiating party will use this URL to redirect the customer from merchant browser to Payit Application browser."
                                                },
                                                "TPPReferenceID": {
                                                    "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                                    "type": "string",
                                                    "description": "The unique identifier generated by the TPP for the payment",
                                                    "example": "alphan123221"
                                                },
                                                "CreationDateTime": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.\nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "schedule-PaymentPayload-Param"
            }
        },
        "/merchant-payments/{companyId}/{brandId}/{tppReferenceId}": {
            "get": {
                "tags": [
                    "Payment Status"
                ],
                "summary": "Get payment status",
                "operationId": "getPaymentStatus",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\S{1,36}$"
                        }
                    },
                    {
                        "name": "brandId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\S{1,36}$"
                        }
                    },
                    {
                        "name": "tppReferenceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/app.v3+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                }
            }
        },
        "/merchant-payments-confirm": {
            "post": {
                "tags": [
                    "Payment Status"
                ],
                "summary": "Payment Confirmation Webhook",
                "description": "This API will be hosted by merchants & Payit application will consume the API. Payit will consume this API when : -\nA> Payit returns the payment confirmation status back to merchant when Customer is in browser session.\nB> Payit experienced a non recoverable technical error in core PISP Journey.\nC> End customer decides to close the browser session while on core PISP screens",
                "operationId": "PaymentstatusConfirm",
                "parameters": [
                    {
                        "name": "x-transaction-ID",
                        "in": "header",
                        "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Related to EndToEndIdentification field in open banking journey",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-]{36}$"
                        }
                    },
                    {
                        "name": "payit-signature",
                        "in": "header",
                        "description": "signature to prevent replay attacks",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Default",
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "required": [
                                    "PaymentUpdate"
                                ],
                                "type": "object",
                                "properties": {
                                    "paymentUpdate": {
                                        "required": [
                                            "paymentReferenceID",
                                            "status",
                                            "statusDateTime",
                                            "tppReferenceID"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "paymentReferenceID": {
                                                "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                                "type": "string",
                                                "description": "The unique identifier generated by the bank for the payment",
                                                "example": "BigCo-21343"
                                            },
                                            "tppReferenceID": {
                                                "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                                "type": "string",
                                                "description": "The unique identifier generated by the TPP for the payment",
                                                "example": "alphan123221"
                                            },
                                            "fpReference": {
                                                "pattern": "^[a-zA-Z0-9\\.\\-\\s]{1,18}$",
                                                "type": "string",
                                                "description": "The reference of the payment",
                                                "example": "Invoice1234"
                                            },
                                            "description": {
                                                "pattern": "^[a-zA-Z0-9 ]*",
                                                "type": "string",
                                                "description": "Description for the payment, to be displayed to the user",
                                                "example": "Payment for order 453364"
                                            },
                                            "status": {
                                                "type": "string",
                                                "description": "Specifies the status of payment in code form.",
                                                "enum": [
                                                    "CustomerAbortedJourney",
                                                    "PaymentApproved",
                                                    "PaymentSettled",
                                                    "PaymentRejected",
                                                    "PaymentNotprocessed",
                                                    "PaymentedStatusUnknown",
                                                    "PaymentAwaitingApproval",
                                                    "TechnicalError"
                                                ]
                                            },
                                            "eventName": {
                                                "type": "string",
                                                "description": "For 'CustomerAbortedJourney' status, extra details will be provided at which step the journey is aborted at. For 'OtherError', 'TechnicalError', 'PaymentRejected' statuses empty value is sent",
                                                "example": "BANK_LOGIN_JOURNEY_PRESENTED"
                                            },
                                            "statusDateTime": {
                                                "type": "string",
                                                "description": "Date and time at which the resource status was updated All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                                "format": "date-time"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Merchant Application",
                        "headers": {
                            "x-transaction-ID": {
                                "description": "Original transaction id generated by Merchant",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-tpp-ID": {
                                "description": "Original TPP id generated by Payit",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "merchantAcknowledgementId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "merchantAcknowledgementId": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique identifier generated by the Merchant on receipt  of the payment status update."
                                        },
                                        "creationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "code",
                                        "id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "PaymentConfirm-Param"
            }
        },
        "/merchant-payments-confirm/paymentReferenceID/{paymentReferenceID}/tppReferenceID/{tppReferenceID}": {
            "patch": {
                "tags": [
                    "Payment Status"
                ],
                "summary": "Awaiting Payment Status Update Webhook",
                "description": "This Api will be hosted by merchants & Payit application will consume the API. Payit will consume this API when : -\nA> Payit returns the payment confirmation status back to merchant when original payment was a non terminal status",
                "operationId": "awaitingPaymentstatusupd",
                "parameters": [
                    {
                        "name": "x-transaction-ID",
                        "in": "header",
                        "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Related to EndToEndIdentification field in open banking journey",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9-]{36}$"
                        }
                    },
                    {
                        "name": "payit-signature",
                        "in": "header",
                        "description": "signature to prevent replay attacks",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentReferenceID",
                        "in": "path",
                        "description": "Payment reference generated by the banks",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tppReferenceID",
                        "in": "path",
                        "description": "The unique identifier generated by the TPP for the payment",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Default",
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "description": "Specifies the status of payment in code form.",
                                        "enum": [
                                            "PaymentApproved",
                                            "PaymentSettled",
                                            "PaymentRejected",
                                            "PaymentNotprocessed",
                                            "PaymentedStatusUnknown",
                                            "PaymentAwaitingApproval",
                                            "CustomerAbortedJourney",
                                            "TechnicalError"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Merchant Application",
                        "headers": {
                            "x-transaction-ID": {
                                "description": "Original transaction id generated by Merchant",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-tpp-ID": {
                                "description": "Original TPP id generated by Payit",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "merchantAcknowledgementId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "merchantAcknowledgementId": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique identifier generated by the Merchant on receipt  of the payment status update."
                                        },
                                        "creationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "code",
                                        "id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "PaymentStatusPatch-Param"
            }
        },
        "/merchant-refunds": {
            "post": {
                "tags": [
                    "Refund Request"
                ],
                "summary": "Refund Request",
                "description": "Initiates a new refund payment flow",
                "operationId": "initiateRefundPayment",
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Accept",
                        "in": "header",
                        "description": "Indicates the Payit version used. For Payit version 3 use 'application/app.v3+json' value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Default",
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "required": [
                                    "Data"
                                ],
                                "type": "object",
                                "properties": {
                                    "Data": {
                                        "required": [
                                            "brandId",
                                            "companyId",
                                            "refundTransaction",
                                            "totalNumberOfRefund",
                                            "totalRefundAmount"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "companyId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Parent Company id",
                                                "example": "BigCo-21343"
                                            },
                                            "brandId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Brand id",
                                                "example": "Brand-1"
                                            },
                                            "totalNumberOfRefund": {
                                                "type": "integer",
                                                "description": "this field contains total number of refund count. Insure maximum 999 individual refund request per API call",
                                                "example": 1
                                            },
                                            "totalRefundAmount": {
                                                "type": "number",
                                                "description": "this field contains total refund amount",
                                                "format": "string",
                                                "example": 33.3
                                            },
                                            "refundTransaction": {
                                                "type": "array",
                                                "description": "contains one or more refund requests",
                                                "items": {
                                                    "required": [
                                                        "PaymentReferenceID",
                                                        "TPPReferenceID",
                                                        "XtransactionID",
                                                        "refundAmount"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "XtransactionID": {
                                                            "maxLength": 31,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the original payment end to end id generated by merchant for the transaction.",
                                                            "example": "xxxccccdrhehdh12342shshw"
                                                        },
                                                        "TPPReferenceID": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the original payment transaction id / ttp id generated by payit application for the transaction.",
                                                            "example": "111ascyyydrhehdh34432"
                                                        },
                                                        "PaymentReferenceID": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the orignial payment id supplied to merchant by payit application for the transaction.",
                                                            "example": "tthfndjejdnsnai384"
                                                        },
                                                        "refundAmount": {
                                                            "type": "number",
                                                            "description": "contains the amount to be refunded to payment service user (PSU), Can contain full or the partial amount.  Goodwill refund will be checks for the threshold set.",
                                                            "format": "string",
                                                            "example": 33.3
                                                        },
                                                        "refundDescription": {
                                                            "maxLength": 50,
                                                            "type": "string",
                                                            "description": "Description for the refund, to be displayed to the user",
                                                            "example": "refund for order #453364 / 11.06.2018"
                                                        },
                                                        "refundFpReference": {
                                                            "maxLength": 10,
                                                            "type": "string",
                                                            "description": "Faster Payments reference, generated by Payit™. It is optional for merchants to provide this info.",
                                                            "example": "Bsed12Dtrs"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Payit Application",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Data"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "required": [
                                                "CreationDateTime",
                                                "tppRefundACKId"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "tppRefundACKId": {
                                                    "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                                    "type": "string",
                                                    "description": "The unique identifier generated by the merchant for the refund response",
                                                    "example": "alphan123221"
                                                },
                                                "CreationDateTime": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.\nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "RefundPayload-Param"
            }
        },
        "/merchant-refunds-confirm": {
            "post": {
                "tags": [
                    "Refund Confirmation"
                ],
                "summary": "Refund Confirmation Webhook",
                "description": "Merchant Api where Payit provide refund status",
                "operationId": "ConfirmRefundStatus",
                "parameters": [
                    {
                        "name": "payit-signature",
                        "in": "header",
                        "description": "signature generated by Payit application to prevent replay attacks",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Default",
                    "content": {
                        "application/json; charset=utf-8": {
                            "schema": {
                                "required": [
                                    "Data"
                                ],
                                "type": "object",
                                "properties": {
                                    "Data": {
                                        "required": [
                                            "brandId",
                                            "companyId"
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "companyId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Parent Company id",
                                                "example": "BigCo-2134"
                                            },
                                            "brandId": {
                                                "pattern": "^\\S{1,36}$",
                                                "type": "string",
                                                "description": "The unique identifier used when onboarding - Brand id",
                                                "example": "Brand-1"
                                            },
                                            "refundAckTransaction": {
                                                "type": "array",
                                                "description": "contains one or more refund status",
                                                "items": {
                                                    "required": [
                                                        "TPPReferenceID",
                                                        "XtransactionID",
                                                        "refundAmount"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "XtransactionID": {
                                                            "maxLength": 31,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the original payment end to end id generated by merchant for the transaction.",
                                                            "example": "xxxccccdrhehdh12342shshw"
                                                        },
                                                        "TPPReferenceID": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the original payment transaction id / ttp id generated by payit application for the transaction.",
                                                            "example": "111ascyyydrhehdh34432"
                                                        },
                                                        "fpReference": {
                                                            "maxLength": 16,
                                                            "minLength": 16,
                                                            "type": "string",
                                                            "description": "contains the payment unique fpReference generated by Payit",
                                                            "example": "111aswedfgtyhj34"
                                                        },
                                                        "refundAmount": {
                                                            "type": "number",
                                                            "description": "contains the amount to be refunded to payment service user (PSU), Can contain full or the partial amount.  Goodwill refund will be checks for the threshold set.",
                                                            "format": "string",
                                                            "example": 33.3
                                                        },
                                                        "refundDescription": {
                                                            "maxLength": 50,
                                                            "type": "string",
                                                            "description": "contains the reason of the refund sent by merchant",
                                                            "example": "don't like the product"
                                                        },
                                                        "tppRefundACKId": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the payit ack generated at merchant refund response.",
                                                            "example": "tthfndjejdnsnai384"
                                                        },
                                                        "refundFPReference": {
                                                            "maxLength": 18,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains a unique refund id generated for refund transactions.",
                                                            "example": "tthfndjejdnsnai384"
                                                        },
                                                        "refundStatus": {
                                                            "maxLength": 20,
                                                            "type": "string",
                                                            "description": "current status of the refund",
                                                            "enum": [
                                                                "RefundValidated",
                                                                "RefundInitated",
                                                                "RefundRejected",
                                                                "RefundSuccessful",
                                                                "RefundReScheduled"
                                                            ]
                                                        },
                                                        "additionalInformation": {
                                                            "maxLength": 100,
                                                            "type": "string",
                                                            "description": "additional information aiding status of the refund",
                                                            "example": "Merchant brand is not in correct status"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Response Payload from Merchant Application",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Data"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "required": [
                                                "MerchantAcknowledgementId"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "MerchantAcknowledgementId": {
                                                    "maxLength": 35,
                                                    "minLength": 1,
                                                    "type": "string",
                                                    "description": "A unique identifier generated by the Merchant on receipt  of the payment status update."
                                                },
                                                "CreationDateTime": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                                    "format": "date-time"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "RefundAckPayload-Param"
            }
        },
        "/reconciliation-version/{companyId}/{reconciliationVersion}": {
            "post": {
                "tags": [
                    "Reconciliation Version"
                ],
                "summary": "Reconciliation Version",
                "description": "to be used when the merchant wants to receive the latest version of reconciliation files",
                "operationId": "updateReconciliationVersionUsingPOST",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "Id of the company/merchant that saves version",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "pattern": "^\\S{1,36}$"
                        }
                    },
                    {
                        "name": "reconciliationVersion",
                        "in": "path",
                        "description": "Version to be saved and used from now on, can only be one of the supported versions",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Saved Version",
                        "headers": {
                            "daterun": {
                                "description": "date on which the file was generated.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "required": [
                                                "CreationDateTime",
                                                "ReconciliationVersion"
                                            ],
                                            "type": "object",
                                            "properties": {
                                                "CreationDateTime": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. \n An example is below: 2021-04-05T10:43:07+00:00",
                                                    "format": "date-time",
                                                    "example": "2021-04-05T10:43:07.000Z"
                                                },
                                                "ReconciliationVersion": {
                                                    "type": "string",
                                                    "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone.  An example is below: 2017-04-05T10:43:07+00:00",
                                                    "example": "3"
                                                }
                                            }
                                        }
                                    },
                                    "description": "Reconciliation Version"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Version not supported or merchant doesn't exist.",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                }
            }
        },
        "/download/reconciliation/{filetype}/{date}/{run}": {
            "get": {
                "tags": [
                    "Reconciliation Files"
                ],
                "summary": "Reconciliation Files",
                "description": "Provides merchants various reconciliation files",
                "operationId": "reconciliation",
                "parameters": [
                    {
                        "name": "filetype",
                        "in": "path",
                        "description": "Type of reconciliation files available for merchant to download. The files are of below types :-  a) Failed - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is failed b) Successful - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is Successful  c) Inprogress - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is Inprogress d) InprogCompleted - The transaction originated BEFORE the reconciliation file generation window and terminal status of the transaction is Successful/Rejected f) Settled - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is Settled **** Sample file generation window - from 2018-06-05T00:00:00+00:00 till 2017-04-05T23:59:59+00:00***",
                        "required": true,
                        "schema": {
                            "maxLength": 15,
                            "type": "string",
                            "enum": [
                                "Failed",
                                "Successful",
                                "Inprogress",
                                "InprogCompleted",
                                "Refund",
                                "Settled"
                            ]
                        }
                    },
                    {
                        "name": "date",
                        "in": "path",
                        "description": "date for which the file needs to be download for. Format is 2018-06-05",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "run",
                        "in": "path",
                        "description": "Applicable for the intra date multiple reconciliation file. If the merchant has one file generated per reconciliation file generation window ie - from 2018-06-05T00:00:00+00:00 till 2018-06-05T23:59:59+00:00 , Then set the field as 0001",
                        "required": true,
                        "schema": {
                            "maxLength": 4,
                            "pattern": "^(?!\\s)(.*)(\\S)$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "companyIdentification",
                        "in": "header",
                        "description": "Unique identification assigned to the merchant company",
                        "required": true,
                        "schema": {
                            "pattern": "^\\S{1,36}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "brandIdentification",
                        "in": "header",
                        "description": "Unique identification assigned to the merchant brand",
                        "schema": {
                            "pattern": "^\\S{1,36}$",
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-FOV-indicator",
                        "in": "header",
                        "description": "For production environments do not send this field or send it as false. Fov indicator will be used by to test new features in production , yet these features are not open to public - First occurrence Validation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payit application will contain the Reconciliation File direct URL.",
                        "headers": {
                            "daterun": {
                                "description": "date on which the file was generated.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "type": "array",
                                    "description": "contains the direct URL for the Reconciliation file location",
                                    "example": [
                                        {
                                            "Filename": "V3-MerchanM-13161.Successful.1.44dcd9a0-f838-4a80-b026-9e0ac5566234.2021-04-06.csv",
                                            "ReconFileURL": "https://payitnonproduksdevnossb.blob.core.windows.net/merchants/MerchanM-13161.Successful.1.44dcd9a0-f838-4a80-b026-9e0ac5566234.2021-04-06.csv?ss=b&sig=GZ8SWlkLS3IeuK4o0%2Fpz%2Fc8VLJyKhWkpiPqsLddi2kk%3D&st=2021-04-07T10%3A20%3A30Z&se=2021-04-14T10%3A20%3A30Z&sv=2015-12-11&srt=o&spr=https&sp=r&sr=o"
                                        }
                                    ],
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "Filename": {
                                                "type": "string"
                                            },
                                            "ReconFileURL": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json; charset=utf-8": {
                                "schema": {
                                    "required": [
                                        "Code",
                                        "Id"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "Code": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "High level textual error code, to help categorise the errors."
                                        },
                                        "Id": {
                                            "maxLength": 40,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                        },
                                        "Message": {
                                            "maxLength": 500,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                        }
                                    },
                                    "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {}
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "content": {}
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "content": {}
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "headers": {
                            "Retry-After": {
                                "description": "Number in seconds to wait",
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "content": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DeliveryAddress": {
                "required": [
                    "countryCode",
                    "townName"
                ],
                "type": "object",
                "properties": {
                    "townName": {
                        "maxLength": 35,
                        "minLength": 1,
                        "pattern": "(?!^ +$)^.*$",
                        "type": "string"
                    },
                    "countryCode": {
                        "pattern": "^[A-Z]{2,2}$",
                        "type": "string"
                    }
                }
            },
            "InstructedAccounts": {
                "required": [
                    "peer2Peerinfo"
                ],
                "type": "object",
                "properties": {
                    "preferredAcctInfo": {
                        "$ref": "#/components/schemas/PreferredAcctInfo"
                    },
                    "peer2Peerinfo": {
                        "$ref": "#/components/schemas/Peer2Peerinfo"
                    }
                }
            },
            "PaymentContext": {
                "required": [
                    "paymentContextCode"
                ],
                "type": "object",
                "properties": {
                    "paymentContextCode": {
                        "type": "string",
                        "enum": [
                            "BillPayment",
                            "EcommerceGoods",
                            "EcommerceServices",
                            "Other",
                            "PartyToParty"
                        ]
                    },
                    "merchantCategoryCode": {
                        "maxLength": 4,
                        "minLength": 3,
                        "pattern": "^[0-9]*$",
                        "type": "string"
                    },
                    "merchantCustomerIdentification": {
                        "maxLength": 70,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9]*$",
                        "type": "string"
                    },
                    "deliveryAddress": {
                        "$ref": "#/components/schemas/DeliveryAddress"
                    }
                }
            },
            "Peer2Peerinfo": {
                "required": [
                    "peer2PeerBankName",
                    "peer2PeerIdentification"
                ],
                "type": "object",
                "properties": {
                    "peer2PeerIdentification": {
                        "maxLength": 14,
                        "minLength": 1,
                        "pattern": "[0-9]+",
                        "type": "string"
                    },
                    "peer2PeerBankName": {
                        "maxLength": 35,
                        "minLength": 1,
                        "pattern": "^[^(){}\\[\\]]*$",
                        "type": "string"
                    }
                }
            },
            "PreferredAcctInfo": {
                "required": [
                    "paymentServiceUser",
                    "preferredAcctIdentification"
                ],
                "type": "object",
                "properties": {
                    "preferredAcctBankName": {
                        "maxLength": 35,
                        "minLength": 1,
                        "type": "string"
                    },
                    "preferredAcctIdentification": {
                        "maxLength": 14,
                        "minLength": 6,
                        "pattern": "[0-9]+",
                        "type": "string"
                    },
                    "paymentServiceUser": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "MerchantPaymentResponseData": {
                "required": [
                    "CreationDateTime",
                    "ResponseURL",
                    "TPPReferenceID"
                ],
                "type": "object",
                "properties": {
                    "CreationDateTime": {
                        "type": "string"
                    },
                    "ResponseURL": {
                        "maxLength": 2000,
                        "minLength": 1,
                        "type": "string"
                    },
                    "TPPReferenceID": {
                        "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,32}$",
                        "type": "string"
                    }
                }
            },
            "EmbeddedMerchantPaymentPayloadDataV3": {
                "required": [
                    "amount",
                    "bankID",
                    "brandId",
                    "companyId",
                    "currency",
                    "redirectUrl"
                ],
                "type": "object",
                "properties": {
                    "bankID": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "companyId": {
                        "pattern": "^\\S{1,36}$",
                        "type": "string"
                    },
                    "brandId": {
                        "pattern": "^\\S{1,36}$",
                        "type": "string"
                    },
                    "amount": {
                        "pattern": "^\\d{1,13}\\.\\d{1,2}$",
                        "type": "string"
                    },
                    "currency": {
                        "pattern": "^[A-Z]{3}$",
                        "type": "string"
                    },
                    "country": {
                        "pattern": "^[A-Z]{2}$",
                        "type": "string"
                    },
                    "fpReference": {
                        "pattern": "^[a-zA-Z0-9\\.\\-\\s]{1,18}$",
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 120,
                        "minLength": 0,
                        "pattern": "[a-zA-Z0-9 ]*",
                        "type": "string"
                    },
                    "redirectUrl": {
                        "maxLength": 2000,
                        "minLength": 0,
                        "type": "string"
                    },
                    "instructedAccounts": {
                        "$ref": "#/components/schemas/InstructedAccounts"
                    },
                    "paymentContext": {
                        "$ref": "#/components/schemas/PaymentContext"
                    }
                }
            },
            "PaymentStatusResponse": {
                "type": "object",
                "properties": {
                    "paymentReferenceId": {
                        "type": "string"
                    },
                    "tppReferenceId": {
                        "type": "string"
                    },
                    "fpReference": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "statusDateTime": {
                        "type": "string"
                    },
                    "xtransactionId": {
                        "type": "string"
                    }
                }
            },
            "EmbeddedMerchantPaymentPayloadV3": {
                "required": [
                    "Data"
                ],
                "type": "object",
                "properties": {
                    "Data": {
                        "$ref": "#/components/schemas/EmbeddedMerchantPaymentPayloadDataV3"
                    }
                }
            }
        },
        "responses": {
            "200EligibleBanksResponse": {
                "description": "Response Payload from Payit Application for eligible banks",
                "headers": {
                    "cache-control": {
                        "description": "Contains the",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "type": "array",
                            "description": "contains the list of active banks and logo URLs",
                            "example": [
                                {
                                    "BankName": "NATWEST",
                                    "LogoUrl": "https://Payit.usetyl.com/natwest.png"
                                },
                                {
                                    "BankName": "LLOYDS",
                                    "LogoUrl": "https://Payit.usetyl.com/lloyds.png"
                                },
                                {
                                    "BankName": "SANTANDER",
                                    "LogoUrl": "https://Payit.usetyl.com/santander.png"
                                },
                                {
                                    "BankName": "BANK_OF_IRELAND_RETAIL",
                                    "LogoUrl": "https://Payit.usetyl.com/boir.png"
                                }
                            ],
                            "items": {
                                "type": "object",
                                "properties": {
                                    "BankName": {
                                        "type": "string"
                                    },
                                    "LogoUrl": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "200PaymentStatusResponse": {
                "description": "Response Payload from Merchant Application",
                "headers": {
                    "x-transaction-ID": {
                        "description": "Original transaction id generated by Merchant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "x-tpp-ID": {
                        "description": "Original TPP id generated by Payit",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "MerchantAcknowledgementId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "MerchantAcknowledgementId": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique identifier generated by the Merchant on receipt  of the payment status update."
                                        },
                                        "CreationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "200ReconciliationFile": {
                "description": "Payit application will contain the Reconciliation File direct URL.",
                "headers": {
                    "daterun": {
                        "description": "date on which the file was generated.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "type": "array",
                            "description": "contains the direct URL for the Reconciliation file location",
                            "example": [
                                {
                                    "Filename": "Inprogress",
                                    "ReconFileURL": "https://Payit.usetyl.com/inprogress.csv"
                                }
                            ],
                            "items": {
                                "type": "object",
                                "properties": {
                                    "Filename": {
                                        "type": "string"
                                    },
                                    "ReconFileURL": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "200ReconciliationVersionResponse": {
                "description": "Reconciliation Version",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "CreationDateTime",
                                        "ReconciliationVersion"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "CreationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. \n An example is below: 2021-04-05T10:43:07+00:00",
                                            "format": "date-time",
                                            "example": "2021-04-05T10:43:07.000Z"
                                        },
                                        "ReconciliationVersion": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone.  An example is below: 2017-04-05T10:43:07+00:00",
                                            "example": "3"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "201PaymentResponse": {
                "description": "Response Payload from Payit Application",
                "headers": {
                    "x-transaction-ID": {
                        "description": "Payit Application will response with back with the Transaction id.",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "CreationDateTime",
                                        "ResponseURL",
                                        "TPPReferenceID"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "ResponseURL": {
                                            "maxLength": 2000,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "This URL will be the Payit APP URL, initiating party will use this URL to redirect the customer from merchant browser to Payit Application browser. The URL will contain the x-transaction-ID and TPPReferenceID as an additional parameter."
                                        },
                                        "TPPReferenceID": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The unique identifier generated by the TPP for the payment",
                                            "example": "alphan123221"
                                        },
                                        "CreationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.\nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "201PaymentStatusResponse": {
                "description": "Response Payload from Merchant Application",
                "headers": {
                    "x-transaction-ID": {
                        "description": "Original transaction id generated by Merchant",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "x-tpp-ID": {
                        "description": "Original TPP id generated by Payit",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "MerchantAcknowledgementId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "MerchantAcknowledgementId": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique identifier generated by the Merchant on receipt  of the payment status update."
                                        },
                                        "CreationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "201RefundAckPaymentResponse": {
                "description": "Response Payload from Merchant Application",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "MerchantAcknowledgementId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "MerchantAcknowledgementId": {
                                            "maxLength": 35,
                                            "minLength": 1,
                                            "type": "string",
                                            "description": "A unique identifier generated by the Merchant on receipt  of the payment status update."
                                        },
                                        "CreationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "201RefundPaymentResponse": {
                "description": "Response Payload from Payit Application",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "CreationDateTime",
                                        "tppRefundACKId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "tppRefundACKId": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The unique identifier generated by the merchant for the refund response",
                                            "example": "alphan123221"
                                        },
                                        "CreationDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource was created. All dates in the JSON payloads are represented in ISO 8601 date-time format.\nAll date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "400ErrorResponse": {
                "description": "Bad request",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Code",
                                "Id"
                            ],
                            "type": "object",
                            "properties": {
                                "Code": {
                                    "maxLength": 40,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "High level textual error code, to help categorise the errors."
                                },
                                "Id": {
                                    "maxLength": 40,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors. An RFC4122 UID used as a Error id"
                                },
                                "Message": {
                                    "maxLength": 500,
                                    "minLength": 1,
                                    "type": "string",
                                    "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
                                }
                            },
                            "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
                        }
                    }
                }
            },
            "401ErrorResponse": {
                "description": "Unauthorised",
                "content": {}
            },
            "403ErrorResponse": {
                "description": "Forbidden",
                "content": {}
            },
            "404ErrorResponse": {
                "description": "Not found",
                "content": {}
            },
            "405ErrorResponse": {
                "description": "Method Not Allowed",
                "content": {}
            },
            "406ErrorResponse": {
                "description": "Not Acceptable",
                "content": {}
            },
            "429ErrorResponse": {
                "description": "Too Many Requests",
                "headers": {
                    "Retry-After": {
                        "description": "Number in seconds to wait",
                        "schema": {
                            "type": "integer"
                        }
                    }
                },
                "content": {}
            },
            "500ErrorResponse": {
                "description": "Internal Server Error",
                "content": {}
            }
        },
        "parameters": {
            "x-payit-signature-Param": {
                "name": "payit-signature",
                "in": "header",
                "description": "signature generated by Payit application to prevent replay attacks",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "companyId": {
                "name": "companyId",
                "in": "path",
                "description": "Unique identification assigned to the merchant company",
                "required": true,
                "schema": {
                    "pattern": "^\\S{1,36}$",
                    "type": "string"
                }
            },
            "companyIdentification": {
                "name": "companyIdentification",
                "in": "header",
                "description": "Unique identification assigned to the merchant company",
                "required": true,
                "schema": {
                    "pattern": "^\\S{1,36}$",
                    "type": "string"
                }
            },
            "brandId": {
                "name": "brandId",
                "in": "path",
                "description": "Unique identification assigned to the merchant brand",
                "required": true,
                "schema": {
                    "pattern": "^\\S{1,36}$",
                    "type": "string"
                }
            },
            "brandIdentification": {
                "name": "brandIdentification",
                "in": "header",
                "description": "Unique identification assigned to the merchant brand",
                "schema": {
                    "pattern": "^\\S{1,36}$",
                    "type": "string"
                }
            },
            "x-transaction-ID-Param": {
                "name": "x-transaction-ID",
                "in": "header",
                "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain. Related to EndToEndIdentification field in open banking journey",
                "required": true,
                "schema": {
                    "maxLength": 31,
                    "pattern": "^(?!\\s)(.*)(\\S)$",
                    "type": "string"
                }
            },
            "x-FOV-Param": {
                "name": "x-FOV-indicator",
                "in": "header",
                "description": "For production environments do not send this field or send it as false. Fov indicator will be used by to test new features in production ,\n      yet these features are not open to public - First occurrence\n      Validation.",
                "schema": {
                    "type": "string"
                }
            },
            "x-customer-device-Param": {
                "name": "x-customer-device",
                "in": "header",
                "description": "Indicates the customers device or browser version",
                "schema": {
                    "maxLength": 40,
                    "pattern": "^(?!\\s)(.*)(\\S)$",
                    "type": "string"
                }
            },
            "x-customer-app-Param": {
                "name": "x-customer-app",
                "in": "header",
                "description": "Indicates the customers browser name or app version",
                "schema": {
                    "maxLength": 40,
                    "pattern": "^(?!\\s)(.*)(\\S)$",
                    "type": "string"
                }
            },
            "Authorization": {
                "name": "Authorization",
                "in": "header",
                "description": "Access token to be sent to Payit project. Merchant can acquire the access token by calling /token endpoint for Payit application. Verb 'Bearer' needs to be used before the access token ",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "X-Fov-Indicator": {
                "name": "X-Fov-Indicator",
                "in": "header",
                "description": "For production environments do not send this field or send it as false. This indicator will be populated by merchant to test new features in live environment. The new live features are not open to public and will be in live proving stage",
                "schema": {
                    "type": "string"
                }
            },
            "filetype": {
                "name": "filetype",
                "in": "path",
                "description": "Type of reconciliation files available for merchant to download. The files are of below types :-  a) Failed - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is failed b) Successful - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is Successful  c) Inprogress - The transaction originated within the reconciliation file generation window and the terminal status of the transaction is Inprogress d) InprogCompleted - The transaction originated BEFORE the reconciliation file generation window and terminal status of the transaction is Successful/Rejected **** Sample file generation window - from 2018-06-05T00:00:00+00:00 till 2017-04-05T23:59:59+00:00***",
                "required": true,
                "schema": {
                    "maxLength": 15,
                    "type": "string",
                    "enum": [
                        "Failed",
                        "Successful",
                        "Inprogress",
                        "InprogCompleted"
                    ]
                }
            },
            "date": {
                "name": "date",
                "in": "path",
                "description": "date for which the file needs to be download for. Format is 2018-06-05",
                "required": true,
                "schema": {
                    "type": "string",
                    "format": "date"
                }
            },
            "run": {
                "name": "run",
                "in": "path",
                "description": "Applicable for the intra date multiple reconciliation file. If the merchant has one file generated per reconciliation file generation window ie - from 2018-06-05T00:00:00+00:00 till 2018-06-05T23:59:59+00:00 , Then set the field as 0001",
                "required": true,
                "schema": {
                    "maxLength": 4,
                    "pattern": "^(?!\\s)(.*)(\\S)$",
                    "type": "string"
                }
            }
        },
        "requestBodies": {
            "RefundAckPayload-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "brandId",
                                        "companyId"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "companyId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Parent Company id",
                                            "example": "BigCo-2134"
                                        },
                                        "brandId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Brand id",
                                            "example": "Brand-1"
                                        },
                                        "refundAckTransaction": {
                                            "type": "array",
                                            "description": "contains one or more refund status",
                                            "items": {
                                                "required": [
                                                    "TPPReferenceID",
                                                    "XtransactionID",
                                                    "refundAmount"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "XtransactionID": {
                                                        "maxLength": 31,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains the original payment end to end id generated by merchant for the transaction.",
                                                        "example": "xxxccccdrhehdh12342shshw"
                                                    },
                                                    "TPPReferenceID": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains the original payment transaction id / ttp id generated by payit application for the transaction.",
                                                        "example": "111ascyyydrhehdh34432"
                                                    },
                                                    "fpReference": {
                                                        "maxLength": 16,
                                                        "minLength": 16,
                                                        "type": "string",
                                                        "description": "contains the payment unique fpReference generated by Payit",
                                                        "example": "111aswedfgtyhj34"
                                                    },
                                                    "refundAmount": {
                                                        "type": "number",
                                                        "description": "contains the amount to be refunded to payment service user (PSU), Can contain full or the partial amount.  Goodwill refund will be checks for the threshold set.",
                                                        "format": "string",
                                                        "example": 33.3
                                                    },
                                                    "refundDescription": {
                                                        "maxLength": 50,
                                                        "type": "string",
                                                        "description": "contains the reason of the refund sent by merchant",
                                                        "example": "don't like the product"
                                                    },
                                                    "tppRefundACKId": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains the payit ack generated at merchant refund response.",
                                                        "example": "tthfndjejdnsnai384"
                                                    },
                                                    "refundFPReference": {
                                                        "maxLength": 18,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains a unique refund id generated for refund transactions.",
                                                        "example": "tthfndjejdnsnai384"
                                                    },
                                                    "refundStatus": {
                                                        "maxLength": 20,
                                                        "type": "string",
                                                        "description": "current status of the refund",
                                                        "enum": [
                                                            "RefundValidated",
                                                            "RefundInitated",
                                                            "RefundRejected",
                                                            "RefundSuccessful",
                                                            "RefundReScheduled"
                                                        ]
                                                    },
                                                    "additionalInformation": {
                                                        "maxLength": 100,
                                                        "type": "string",
                                                        "description": "additional information aiding status of the refund",
                                                        "example": "Merchant brand is not in correct status"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "PaymentPayload-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "amount",
                                        "brandId",
                                        "companyId",
                                        "currency",
                                        "redirectUrl"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "companyId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Parent Company id",
                                            "example": "BigCo-21343"
                                        },
                                        "brandId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Brand id",
                                            "example": "Brand-1"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "description": "The sum to pay",
                                            "format": "string",
                                            "example": 20.45
                                        },
                                        "currency": {
                                            "type": "string",
                                            "description": "The currency in which the payment should be done, according to ISO 4217",
                                            "example": "GBP"
                                        },
                                        "country": {
                                            "pattern": "^[A-Z]{2}$",
                                            "type": "string",
                                            "description": "The target country, used to filter ASPSPs, according to ISO 3166-1 alpha-2.",
                                            "example": "UK"
                                        },
                                        "reason": {
                                            "maxLength": 500,
                                            "type": "string",
                                            "description": "Description for the payment, to be displayed to the user",
                                            "example": "Payment for order #453364 / 11.06.2018"
                                        },
                                        "redirectUrl": {
                                            "maxLength": 2000,
                                            "type": "string",
                                            "description": "\"The URL of the payment initiating party. This will be used to transfer the payment confirmation back to initiating party from Payit\""
                                        },
                                        "instructedAccounts": {
                                            "type": "object",
                                            "properties": {
                                                "peer2Peerinfo": {
                                                    "required": [
                                                        "peer2PeerIdentification"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "peer2PeerIdentification": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the sort-code and the account number of the customer to suffice peer to peer transfers"
                                                        },
                                                        "peer2PeerBankName": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the sort-code and the account number of the customer to suffice peer to peer transfers.  Brackets (eg. \"()\", \"[]\", \"{}\") are not allowed in this field."
                                                        }
                                                    },
                                                    "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the destination account information. "
                                                },
                                                "preferredAcctInfo": {
                                                    "required": [
                                                        "paymentServiceUser",
                                                        "preferredAcctIdentification"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "preferredAcctIdentification": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the sort-code only or the sort-code and the account number of the preferred account number for the customer"
                                                        },
                                                        "preferredAcctBankName": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "Contains the preferred account bank name. "
                                                        },
                                                        "paymentServiceUser": {
                                                            "maxLength": 50,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "Contains an identifier for the customer. This field will be used for \"remember me functionality\". This might contain the customer email address"
                                                        }
                                                    },
                                                    "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the source account information."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "schedule-PaymentPayload-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data",
                                "SchedulePaymentData"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "amount",
                                        "brandId",
                                        "companyId",
                                        "currency",
                                        "redirectUrl"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "companyId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Parent Company id",
                                            "example": "BigCo-21343"
                                        },
                                        "brandId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Brand id",
                                            "example": "Brand-1"
                                        },
                                        "amount": {
                                            "type": "number",
                                            "description": "The sum to pay",
                                            "format": "string",
                                            "example": 20.45
                                        },
                                        "currency": {
                                            "type": "string",
                                            "description": "The currency in which the payment should be done, according to ISO 4217",
                                            "example": "GBP"
                                        },
                                        "country": {
                                            "pattern": "^[A-Z]{2}$",
                                            "type": "string",
                                            "description": "The target country, used to filter ASPSPs, according to ISO 3166-1 alpha-2.",
                                            "example": "UK"
                                        },
                                        "reason": {
                                            "maxLength": 500,
                                            "type": "string",
                                            "description": "Description for the payment, to be displayed to the user",
                                            "example": "Payment for order #453364 / 11.06.2018"
                                        },
                                        "redirectUrl": {
                                            "maxLength": 2000,
                                            "type": "string",
                                            "description": "\"The URL of the payment initiating party. This will be used to transfer the payment confirmation back to initiating party from Payit\""
                                        },
                                        "instructedAccounts": {
                                            "type": "object",
                                            "properties": {
                                                "peer2Peerinfo": {
                                                    "required": [
                                                        "peer2PeerIdentification"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "peer2PeerIdentification": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the sort-code and the account number of the customer to suffice peer to peer transfers"
                                                        },
                                                        "peer2PeerBankName": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the sort-code and the account number of the customer to suffice peer to peer transfers. Brackets (eg. \"()\", \"[]\", \"{}\") are not allowed in this field."
                                                        }
                                                    },
                                                    "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the destination account information. "
                                                },
                                                "preferredAcctInfo": {
                                                    "required": [
                                                        "paymentServiceUser",
                                                        "preferredAcctIdentification"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "preferredAcctIdentification": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "contains the sort-code only or the sort-code and the account number of the preferred account number for the customer"
                                                        },
                                                        "preferredAcctBankName": {
                                                            "maxLength": 35,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "Contains the preferred account bank name. "
                                                        },
                                                        "paymentServiceUser": {
                                                            "maxLength": 50,
                                                            "minLength": 1,
                                                            "type": "string",
                                                            "description": "Contains an identifier for the customer. This field will be used for \"remember me functionality\". This might contain the customer email address"
                                                        }
                                                    },
                                                    "description": "This block of information is required to be send by the merchant to Payit application for PEER to PEER payment. This contains the source account information."
                                                }
                                            }
                                        }
                                    }
                                },
                                "SchedulePaymentData": {
                                    "required": [
                                        "RequestedExecutionDateTime"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "RequestedExecutionDateTime": {
                                            "type": "string",
                                            "description": "Date at which the end user (customer) want to initiate the payment to the payment requesting party. This is the date on which the debtor's account is to be debited. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the time zone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "PaymentStatus-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "PaymentUpdate"
                            ],
                            "type": "object",
                            "properties": {
                                "PaymentUpdate": {
                                    "required": [
                                        "MerchantAcknowledgementId",
                                        "PaymentReferenceID",
                                        "Status",
                                        "StatusUpdateDateTime",
                                        "TPPReferenceID"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "PaymentReferenceID": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The unique identifier generated by the bank for the payment",
                                            "example": "BigCo-21343"
                                        },
                                        "TPPReferenceID": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The unique identifier generated by the TPP for the payment",
                                            "example": "alphan123221"
                                        },
                                        "MerchantAcknowledgementId": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The acknowledgement identifier that was sent by the merchant merchant in payment confirmation response",
                                            "example": "alphan123221"
                                        },
                                        "Status": {
                                            "type": "string",
                                            "description": "Specifies the status of payment in code form.",
                                            "enum": [
                                                "PaymentApproved",
                                                "PaymentRejected",
                                                "PaymentNotprocessed",
                                                "PaymentedStatusUnknown",
                                                "PaymentAwaitingApproval",
                                                "CustomerAbortedJourney",
                                                "TechnicalError"
                                            ]
                                        },
                                        "StatusUpdateDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource status was updated. All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "PaymentStatusPatch-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Status"
                            ],
                            "type": "object",
                            "properties": {
                                "Status": {
                                    "type": "string",
                                    "description": "Specifies the status of payment in code form.",
                                    "enum": [
                                        "PaymentApproved",
                                        "PaymentRejected",
                                        "PaymentNotprocessed",
                                        "PaymentedStatusUnknown",
                                        "PaymentAwaitingApproval",
                                        "CustomerAbortedJourney",
                                        "TechnicalError"
                                    ]
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "PaymentConfirm-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "PaymentUpdate"
                            ],
                            "type": "object",
                            "properties": {
                                "PaymentUpdate": {
                                    "required": [
                                        "PaymentReferenceID",
                                        "Status",
                                        "StatusDateTime",
                                        "TPPReferenceID"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "PaymentReferenceID": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The unique identifier generated by the bank for the payment",
                                            "example": "BigCo-21343"
                                        },
                                        "TPPReferenceID": {
                                            "pattern": "^[a-zA-Z0-9\\.\\-\\+_]{1,35}$",
                                            "type": "string",
                                            "description": "The unique identifier generated by the TPP for the payment",
                                            "example": "alphan123221"
                                        },
                                        "Status": {
                                            "type": "string",
                                            "description": "Specifies the status of payment in code form.",
                                            "enum": [
                                                "CustomerAbortedJourney",
                                                "PaymentApproved",
                                                "PaymentRejected",
                                                "PaymentNotprocessed",
                                                "PaymentedStatusUnknown",
                                                "PaymentAwaitingApproval",
                                                "TechnicalError"
                                            ]
                                        },
                                        "StatusDateTime": {
                                            "type": "string",
                                            "description": "Date and time at which the resource status was updated All dates in the JSON payloads are represented in ISO 8601 date-time format.  All date-time fields in responses must include the timezone. An example is below: 2017-04-05T10:43:07+00:00",
                                            "format": "date-time"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": true
            },
            "RefundPayload-Param": {
                "description": "Default",
                "content": {
                    "application/json; charset=utf-8": {
                        "schema": {
                            "required": [
                                "Data"
                            ],
                            "type": "object",
                            "properties": {
                                "Data": {
                                    "required": [
                                        "brandId",
                                        "companyId",
                                        "refundTransaction",
                                        "totalNumberOfRefund",
                                        "totalRefundAmount"
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "companyId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Parent Company id",
                                            "example": "BigCo-21343"
                                        },
                                        "brandId": {
                                            "pattern": "^\\S{1,36}$",
                                            "type": "string",
                                            "description": "The unique identifier used when onboarding - Brand id",
                                            "example": "Brand-1"
                                        },
                                        "totalNumberOfRefund": {
                                            "type": "integer",
                                            "description": "this field contains total number of refund count. Insure maximum 999 individual refund request per API call",
                                            "example": 1
                                        },
                                        "totalRefundAmount": {
                                            "type": "number",
                                            "description": "this field contains total refund amount",
                                            "format": "string",
                                            "example": 33.3
                                        },
                                        "refundTransaction": {
                                            "type": "array",
                                            "description": "contains one or more refund requests",
                                            "items": {
                                                "required": [
                                                    "PaymentReferenceID",
                                                    "TPPReferenceID",
                                                    "XtransactionID",
                                                    "refundAmount"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "XtransactionID": {
                                                        "maxLength": 31,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains the original payment end to end id generated by merchant for the transaction.",
                                                        "example": "xxxccccdrhehdh12342shshw"
                                                    },
                                                    "TPPReferenceID": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains the original payment transaction id / ttp id generated by payit application for the transaction.",
                                                        "example": "111ascyyydrhehdh34432"
                                                    },
                                                    "PaymentReferenceID": {
                                                        "maxLength": 35,
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "contains the orignial payment id supplied to merchant by payit application for the transaction.",
                                                        "example": "tthfndjejdnsnai384"
                                                    },
                                                    "refundAmount": {
                                                        "type": "number",
                                                        "description": "contains the amount to be refunded to payment service user (PSU), Can contain full or the partial amount.  Goodwill refund will be checks for the threshold set.",
                                                        "format": "string",
                                                        "example": 33.3
                                                    },
                                                    "refundDescription": {
                                                        "maxLength": 50,
                                                        "type": "string",
                                                        "description": "Description for the refund, to be displayed to the user",
                                                        "example": "refund for order #453364 / 11.06.2018"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "required": true
            }
        }
    }
}